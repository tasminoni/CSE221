# -*- coding: utf-8 -*-
"""task-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fEGe4B5B6QTDUdeUiyVxmuiSyaQd0PpZ
"""

#task 1
def function(inp, out):
    city, road = [int(x) for x in inp.readline().split()]
    parent = [0] * (city+1)
    for i in range(city+1):
        parent[i] = i

    graph = []
    for i in range(road):
        u,v,w = [int(x) for x in inp.readline().split()]
        graph.append((w,u,v))

    graph.sort()
    count = 0
    for i in graph:
        w,u,v = i
        parent_u = find(u, parent)
        parent_v = find(v, parent)
        if(parent_u != parent_v):
            parent[parent_u] = parent[parent_v]
            count += w

    print(count, file = out)
    inp.close()
    out.close()

def find(r, parent):
    if(parent[r] != r):
        parent[r] = find(parent[r],parent)
    return parent[r]


inp = open("/content/input1.txt", "r")
out = open("/content/output1.txt", "w")
function(inp, out)