# -*- coding: utf-8 -*-
"""task-1b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wCh5ieCjgjLpEHxBFfDXFmEIHAh0JQsf
"""

#Task 1(b)
from collections import defaultdict, deque

def bfs_order(courses, prereq):
    graph = defaultdict(list)
    in_degree = [0] * (courses + 1)

    for a, b in prereq:
        graph[a].append(b)
        in_degree[b] += 1

    queue = deque()
    for course in range(1, courses + 1):
        if in_degree[course] == 0:
            queue.append(course)

    result = []
    while queue:
        course = queue.popleft()
        result.append(course)

        for nei in graph[course]:
            in_degree[nei] -= 1
            if in_degree[nei] == 0:
                queue.append(nei)

    if len(result) != courses:
        return "IMPOSSIBLE"

    return result

inp = open("/content/input1b.txt", "r")
out = open("/content/output1b.txt", "w")

y = [int(x) for x in inp.readline().split()]
b = []
for i in range(y[1]):
    x = [int(x) for x in inp.readline().split()]
    b.append(tuple(x))
gra = bfs_order(y[0], b)
print(*gra,file=out)
inp.close()
out.close()