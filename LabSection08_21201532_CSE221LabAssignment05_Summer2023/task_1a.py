# -*- coding: utf-8 -*-
"""task-1a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18bi0DQUxoLVHO4P1w9FvDk7VfObaK561
"""

#Task 1(a)
from collections import defaultdict

def dfs_order(courses,prereq):
  graph=defaultdict(list)
  for a,b in prereq:
    graph[a].append(b)
  #print(graph)

  def dfs(course,visited,result):
    visited[course]=1
    for nei in graph[course]:
      if visited[nei]==0:
        if not dfs(nei, visited, result):
          return False
      elif visited[nei]==1:
        return False
    visited[course]=2
    result.append(course)
    return True

  visited=[0]*(courses+1)
  result=[]

  for course in range(1,courses+1):
    if visited[course] == 0:
      if not dfs(course, visited, result):
        return "IMPOSSIBLE"

  return result[::-1]

inp= open("/content/input1a.txt", "r")
out= open("/content/output1a.txt", "w")

y=[int(x) for x in inp.readline().split()]
b=[]
for i in range(y[1]):
  x=[int(x) for x in inp.readline().split()]
  b.append(tuple(x))
gra= dfs_order(y[0],b)
print(*gra,file=out)
inp.close()
out.close()

