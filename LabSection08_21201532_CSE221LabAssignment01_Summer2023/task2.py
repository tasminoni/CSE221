# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JY156lkAtf5BQDuLs-XOk3hEN6n-Ufrb
"""

#Task2:
def bubbleSort(arr):
    for i in range(len(arr) - 1):
        is_sort = True
        for j in range(len(arr) - i - 1):
            if(arr[j] > arr[j+1]):
                arr[j], arr[j+1] = arr[j+1], arr[j]
                is_sort = False
        if(is_sort):
            break

task_input = open("input2.txt", "r")
task_output = open("output2.txt", "w")
count = int(task_input.readline())
arr = task_input.readline().split()
for i in range(count):
    arr[i] = int(arr[i])

bubbleSort(arr)
s = ""
for i in range(count):
    s += str(arr[i]) + " "

print(s)
task_output.write(s)
task_input.close()
task_output.close()
#in best case all the elements are in ascending order.
#that means every ith index value must be less than (ith + 1) element
#so just take a flag variable we checked if the array is sorted or not
#in best case, flag value will be True and the loop will terminate
#thus we get linear time complexity O(n)