# -*- coding: utf-8 -*-
"""Task-06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZ4oeLgBBGZaQRp-4g1q2iP3sCiyLTlz
"""

#task 6
def floodFill(n, m, x, y, graph, visit_arr):

    if(x < 0 or x > n - 1 or y < 0 or y > m - 1):
        return 0

    if(graph[x][y] == "#" or visit_arr[x][y] == 1):
        return 0

    visit_arr[x][y] = 1
    count = 0
    if(graph[x][y] == "D"):
        count += 1
    count += floodFill(n, m, x + 1, y, graph, visit_arr)
    count += floodFill(n, m, x - 1, y, graph, visit_arr)
    count += floodFill(n, m, x, y + 1, graph, visit_arr)
    count += floodFill(n, m, x, y - 1, graph, visit_arr)
    return count

def function(inp, out):
    n, m = inp.readline().split()
    n = int(n)
    m = int(m)
    matrix = []
    visit_arr = []
    for i in range(n):
        visit_arr.append([0] * (m))

    for i in range(n):
        temp = inp.readline().strip()
        temp2 = []
        for j in range(len(temp)):
            temp2 += temp[j]
        matrix.append(temp2)

    max_count = 0
    for i in range(n):
        for j in range(m):
            if(visit_arr[i][j] == 0 and matrix[i][j] != "D"):
                count = floodFill(n, m, i, j, matrix, visit_arr)
                if(count > max_count):
                    max_count = count

    print(max_count)
    out.write(str(max_count))

    inp.close()
    out.close()

inp = open("/content/input6.txt", "r")
out = open("/content/output6.txt", "w")
function(inp, out)