# -*- coding: utf-8 -*-
"""Task-03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y863g3xPUvNSEarRwBPT2-FvbtNw-UaR
"""

def dfs(graph, n):
    visit_arr = [0] * (n + 1)
    return explore(graph, visit_arr, 1, "")


def explore(graph, visit_arr, vertex, s):
    visit_arr[vertex] = 1
    s += str(vertex) + " "
    for i in range(len(graph[vertex])):
        if visit_arr[graph[vertex][i]] == 0:
            s = explore(graph, visit_arr, graph[vertex][i], s)
    #print(s)
    return s



def prog(fh, o_fh):
    n, m = fh.readline().split()
    n=int(n)
    m=int(m)
    matrix=[]
    for i in range(n + 1):
        matrix.append([])

    for i in range(m):
        lst = [int(x) for x in fh.readline().split()]
        matrix[lst[0]].append(lst[1])
        matrix[lst[1]].append(lst[0])

    result = dfs(matrix, n)
    print(result)
    o_fh.write(result)

    fh.close()
    o_fh.close()


fh = open("/content/input3.txt", "r")
o_fh = open("/content/output3.txt", "w")
prog(fh, o_fh)